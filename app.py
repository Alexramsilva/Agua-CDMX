# -*- coding: utf-8 -*-
"""Ilhuicatl_II.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-xU_eH0-uVtrO7Jq4W31apOJZ34te16v
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

st.image("URC.png", caption="UST-URC Universidad Rosario Castellanos", width=300)
st.image("pa.jpeg", caption="Ilhuicatl", width=300)

# Crear un DataFrame con los datos proporcionados
data = {'Consumo de agua': [641, 400, 645.5, 357, 332, 753.5, 276, 1604, 1006, 618, 1600, 1608, 1000, 883, 845, 1560, 2565, 2888, 1168, 330, 606, 465, 452, 325, 765, 6716, 794, 4357, 832, 471, 4862, 470, 581, 700, 2000, 3778, 1708, 2746, 2345, 4862, 3673, 2629, 3818.5, 3124, 319, 590, 915, 645, 1795, 930, 342, 335, 675, 1164, 831, 700, 700, 1315, 1040, 285, 850, 464, 455, 597, 230, 401],
        'Tipo de consumo': ['Consumo normal de agua', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Consumo normal de agua', 'Consumo normal de agua', 'Consumo de agua de más', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo de agua de más', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Consumo normal de agua', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo', 'Reviza bien tu consumo, puede ser que estás subestimando tu consumo']
}

df = pd.DataFrame(data)

# Dividir los datos en conjuntos de entrenamiento y prueba
X = df[['Consumo de agua']]
y = df['Tipo de consumo']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)

# Inicializar y entrenar el modelo de Bosques Aleatorios
rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)
rf_classifier.fit(X_train, y_train)

# Definir la aplicación Streamlit
st.title('Ilhuicatl-Cielo (donde se forman las nubes y se origina el agua)')

st.title('Predicción de Tipo de Consumo de Agua CDMX y ZMVM')

# Recabar información para X_t1
X_t1 = st.number_input('Ingresa tu consumo de agua semanal estimada', value=550)

# Predecir las categorías de gasto en el conjunto de prueba
X_t1_array = np.array([X_t1])
X_t1_array = X_t1_array.reshape(-1, 1)
y_pred = rf_classifier.predict(X_t1_array)

# Mostrar el resultado de y_pred
st.write('# Tu tipo de consumo es:', y_pred[0],'.', 'De acuerdo a la Organización Mundial de la Salud (OMS), una persona requiere de 100 litros de agua al día.')